import "tfplan-functions" as plan

// Databrick cluster nodes can only be of type Standard_DS3_v2
allowed_nodes = ["Standard_DS3_v2"]
all_db_clusters = plan.find_resources("databricks_cluster")
violatingDBclusters = plan.filter_attribute_not_in_list(all_db_clusters, 
                "node_type_id", allowed_nodes, true)

ClustersNodeVialationsMsg = length(violatingDBclusters["messages"])

// Databricks clusters can only have up to 5 worker nodes
max_workers = 5
allClusters = plan.find_resources("databricks_cluster")

ClustersWithInvalidMaxWorkers = plan.filter_attribute_greater_than_value(allClusters,
                "autoscale.0.max_workers", max_workers, true)

MaxWorkersVialationsMsg = length(ClustersWithInvalidMaxWorkers["messages"])

// Enforce naming conventions
namingViolations = plan.filter_attribute_does_not_match_regex(all_db_clusters, "cluster_name", "dev|staging|prod", true)
namingViolationsMsg = length(namingViolations["messages"])
plan.print_violations(namingViolationsMsg)
// Final evaluation
main = rule {
    MaxWorkersVialationsMsg is 0 and ClustersNodeVialationsMsg is 0 and namingViolationsMsg is 0
}
