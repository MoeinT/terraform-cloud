import "tfplan-functions" as plan

// Eventhub namespaces can only have up to 2 throughput units 
maxCapacity = 2
allnamespaces = plan.find_resources("azurerm_eventhub_namespace")

CapacityViolation = plan.filter_attribute_greater_than_value(allnamespaces,
                "capacity", maxCapacity, true)

CapacityViolationMsg = length(CapacityViolation["messages"])

// Eventhubs can have up to 4 partitions
maxPartitions = 4
alleventhubs = plan.find_resources("azurerm_eventhub")

partitionCountViolation = plan.filter_attribute_greater_than_value(alleventhubs,
                "partition_count", maxCapacity, true)

partitionCountViolationMsg = length(partitionCountViolation["messages"])

// Enforce naming conventions
namingViolationsNS = plan.filter_attribute_does_not_match_regex(allnamespaces, "name", "dev|staging|prod", true)
namingViolationsnsMsg = length(namingViolationsNS["messages"])

namingViolationsEventhub = plan.filter_attribute_does_not_match_regex(alleventhubs, "name", "dev|staging|prod", true)
namingViolationsEventhubMsg = length(namingViolationsEventhub["messages"])

// Final evaluation
main = rule {
    CapacityViolationMsg is 0 and partitionCountViolationMsg is 0 namingViolationsnsMsg is 0 namingViolationsEventhubMsg is 0
}